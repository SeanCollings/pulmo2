// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AllActivitiesScreen - unit test allActivitiesScreenOptions headerTitle 1`] = `
<Text
  style={
    Object {
      "color": "white",
      "fontSize": 20,
    }
  }
>
  All activities
</Text>
`;

exports[`AllActivitiesScreen - unit test allActivitiesScreenOptions options 1`] = `
Object {
  "cardStyleInterpolator": [Function],
  "headerTitle": [Function],
}
`;

exports[`AllActivitiesScreen - unit test should render all activities when present 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "date": "2020-07-26T15:15:43.411Z",
          "excercise": Object {
            "cycles": "10",
            "id": 1,
            "rest": "5",
            "rounds": "2",
            "title": "Custom Excercise 1",
          },
          "favourite": false,
          "level": 2,
          "results": Array [
            Array [
              "01:38",
              "00:05",
            ],
            Array [
              "00:32",
              "",
            ],
          ],
          "type": "Custom",
        },
        Object {
          "date": "2020-07-25T15:15:43.411Z",
          "excercise": Object {
            "cycles": "12",
            "id": 3,
            "rest": "5",
            "rounds": "4",
            "title": "Strength Excercise 3",
          },
          "favourite": true,
          "level": 4,
          "results": Array [
            Array [
              "01:38",
              "01:00",
            ],
          ],
          "type": "Strength",
        },
        Object {
          "date": "2020-06-12T15:15:43.411Z",
          "excercise": Object {
            "cycles": "11",
            "id": 2,
            "rest": "4",
            "rounds": "3",
            "title": "Endurance Excercise 2",
          },
          "favourite": false,
          "level": 3,
          "results": Array [
            Array [
              "01:38",
              "00:15",
            ],
            Array [
              "00:32",
              "00:15",
            ],
            Array [
              "02:38",
              "00:15",
            ],
          ],
          "type": "Endurance",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={20}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.001}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={11}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "opacity": 1,
              "paddingTop": 5,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 5,
                "paddingHorizontal": "10%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "20%",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#CCC",
                      "fontSize": 30,
                    },
                    undefined,
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": "80%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#002f56",
                    "fontFamily": "tit-regular",
                    "fontSize": 18,
                  }
                }
              >
                Custom Excercise 1
              </Text>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#5bacf3",
                      "fontFamily": "tit-regular",
                      "fontSize": 16,
                    }
                  }
                >
                  Sun
                </Text>
                <Text
                  style={
                    Object {
                      "color": "#3e4b57",
                      "fontFamily": "tit-light",
                      "fontSize": 16,
                      "opacity": 1,
                    }
                  }
                >
                   26/07/2020 17:15
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 10,
                    "width": "100%",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#3e4b57",
                      "fontFamily": "tit-light",
                      "fontSize": 16,
                      "opacity": 0.6,
                    }
                  }
                >
                  02:15
                </Text>
                <Text
                  style={
                    Object {
                      "color": "#3e4b57",
                      "fontFamily": "tit-light",
                      "fontSize": 16,
                      "opacity": 0.6,
                    }
                  }
                >
                  level: 
                  2
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "borderTopColor": "#CCC",
                "borderTopWidth": 1,
                "opacity": 0.6,
                "width": "80%",
              }
            }
          />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "opacity": 1,
              "paddingTop": 5,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 5,
                "paddingHorizontal": "10%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "20%",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#CCC",
                      "fontSize": 30,
                    },
                    undefined,
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": "80%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#002f56",
                    "fontFamily": "tit-regular",
                    "fontSize": 18,
                  }
                }
              >
                Strength Excercise 3
              </Text>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#5bacf3",
                      "fontFamily": "tit-regular",
                      "fontSize": 16,
                    }
                  }
                >
                  Sat
                </Text>
                <Text
                  style={
                    Object {
                      "color": "#3e4b57",
                      "fontFamily": "tit-light",
                      "fontSize": 16,
                      "opacity": 1,
                    }
                  }
                >
                   25/07/2020 17:15
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 10,
                    "width": "100%",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#3e4b57",
                      "fontFamily": "tit-light",
                      "fontSize": 16,
                      "opacity": 0.6,
                    }
                  }
                >
                  02:38
                </Text>
                <Text
                  style={
                    Object {
                      "color": "#3e4b57",
                      "fontFamily": "tit-light",
                      "fontSize": 16,
                      "opacity": 0.6,
                    }
                  }
                >
                  level: 
                  4
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "borderTopColor": "#CCC",
                "borderTopWidth": 1,
                "opacity": 0.6,
                "width": "80%",
              }
            }
          />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "opacity": 1,
              "paddingTop": 5,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "opacity": 1,
                "paddingBottom": 5,
                "paddingHorizontal": "10%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "20%",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#CCC",
                      "fontSize": 30,
                    },
                    undefined,
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                肋
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": "80%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#002f56",
                    "fontFamily": "tit-regular",
                    "fontSize": 18,
                  }
                }
              >
                Endurance Excercise 2
              </Text>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#5bacf3",
                      "fontFamily": "tit-regular",
                      "fontSize": 16,
                    }
                  }
                >
                  Fri
                </Text>
                <Text
                  style={
                    Object {
                      "color": "#3e4b57",
                      "fontFamily": "tit-light",
                      "fontSize": 16,
                      "opacity": 1,
                    }
                  }
                >
                   12/06/2020 17:15
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 10,
                    "width": "100%",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#3e4b57",
                      "fontFamily": "tit-light",
                      "fontSize": 16,
                      "opacity": 0.6,
                    }
                  }
                >
                  05:33
                </Text>
                <Text
                  style={
                    Object {
                      "color": "#3e4b57",
                      "fontFamily": "tit-light",
                      "fontSize": 16,
                      "opacity": 0.6,
                    }
                  }
                >
                  level: 
                  3
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "white",
        "borderBottomWidth": 0,
        "borderColor": "#CCC",
        "borderTopLeftRadius": 50,
        "borderTopRightRadius": 50,
        "borderWidth": 1,
        "bottom": -100,
        "padding": 10,
        "position": "absolute",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#002f56"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
</View>
`;

exports[`AllActivitiesScreen - unit test should render an empty screen if there is an error in favourited activity load 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={20}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.001}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={11}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      Object {
        "alignSelf": "center",
        "flex": 1,
        "position": "absolute",
        "top": "50%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3e4b57",
          "fontFamily": "tit-light",
          "fontSize": 16,
          "opacity": 1,
        }
      }
    >
      Saved activities are shown here.
    </Text>
  </View>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "white",
        "borderBottomWidth": 0,
        "borderColor": "#CCC",
        "borderTopLeftRadius": 50,
        "borderTopRightRadius": 50,
        "borderWidth": 1,
        "bottom": -100,
        "padding": 10,
        "position": "absolute",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#002f56"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
</View>
`;

exports[`AllActivitiesScreen - unit test should render an empty screen when there are no activities for the found activity IDs 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={20}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.001}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={11}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      Object {
        "alignSelf": "center",
        "flex": 1,
        "position": "absolute",
        "top": "50%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3e4b57",
          "fontFamily": "tit-light",
          "fontSize": 16,
          "opacity": 1,
        }
      }
    >
      Saved activities are shown here.
    </Text>
  </View>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "white",
        "borderBottomWidth": 0,
        "borderColor": "#CCC",
        "borderTopLeftRadius": 50,
        "borderTopRightRadius": 50,
        "borderWidth": 1,
        "bottom": -100,
        "padding": 10,
        "position": "absolute",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#002f56"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
</View>
`;

exports[`AllActivitiesScreen - unit test should render an empty screen when there are no activity IDs 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={20}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.001}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={11}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      Object {
        "alignSelf": "center",
        "flex": 1,
        "position": "absolute",
        "top": "50%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3e4b57",
          "fontFamily": "tit-light",
          "fontSize": 16,
          "opacity": 1,
        }
      }
    >
      Saved activities are shown here.
    </Text>
  </View>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "white",
        "borderBottomWidth": 0,
        "borderColor": "#CCC",
        "borderTopLeftRadius": 50,
        "borderTopRightRadius": 50,
        "borderWidth": 1,
        "bottom": -100,
        "padding": 10,
        "position": "absolute",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#002f56"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
</View>
`;
